Implementacja problemu "Producent-konsument" jak w ćwiczeniu 4. Najlepiej zaimplementować "producenta" i "konsumenta" w dwóch oddzielnych programach (funkcjach main()) - każdy z nich niech przez argumenty wywołania pobiera nazwę potoku oraz nazwę odpowiedniego pliku tekstowego; potok nazwany - tak jak plik - przed użyciem należy otworzyć funkcją open(), a po użyciu zamknąć funkcją close().

W punkcie (a) należy napisać dodatkowy program, który utworzy potok nazwany, następnie przy pomocy funkcji fork() utworzy dwa procesy potomne, w których przy użyciu wywołania exec uruchomi odpowiednio programy "producenta" i "konsumenta", a na końcu poczeka na ich zakończenie i usunie potok (nazwy plików wykonawczych dla exec przekazywać przez argumenty wywołania programu). Potok należy usunąć w funkcji zarejestrowanej przez funkcję atexit(). Należy zwrócić uwagę na to, gdzie należy wywołać funkcję exit(), a gdzie _exit() - by nie usuwać potoku, który nie został jeszcze utworzony lub nie usuwać go więcej niż raz! Dodatkowo, można dodać obsługę sygnału SIGINT, która będzie usuwać potok - na wypadek gdyby program trzeba było zakończyć sekwencją klawiszy Ctrl-C. Nazwy plików danych i wyników oraz nazwę potoku należy przekazać przez argumenty wywołania programu.

W punkcie (b) należy utworzyć potok nazwany z poziomu powłoki, następnie uruchomić programy "producenta" i "konsumenta" z różnych terminali, a na końcu z poziomu powłoki usunąć potok. Najlepiej wszystkie te polecenia umieścić w pliku Makefile, np. programy uruchomić za pomocą xterm:
